[{"C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\index.js":"1","C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\components\\Mapa.jsx":"2","C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\components\\Navbar\\MenuItems.js":"3","C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\components\\FormularioController.jsx":"4","C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\components\\Navbar\\Contacto.jsx":"5","C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\components\\iconos.jsx":"6","C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\datos\\geo.js":"7"},{"size":439,"mtime":1607538555776,"results":"8","hashOfConfig":"9"},{"size":5340,"mtime":1607538728163,"results":"10","hashOfConfig":"9"},{"size":582,"mtime":1607538555745,"results":"11","hashOfConfig":"9"},{"size":2340,"mtime":1607538555744,"results":"12","hashOfConfig":"9"},{"size":198,"mtime":1607538555745,"results":"13","hashOfConfig":"9"},{"size":804,"mtime":1607538555756,"results":"14","hashOfConfig":"9"},{"size":857425,"mtime":1607538555761,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ueexv8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\index.js",[],["32","33"],"C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\components\\Mapa.jsx",["34","35"],"import React, { useState } from \"react\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport { geoData } from './../datos/geo';\r\nimport comarcas from \"../datos/polygons.json\";\r\nimport { icono, beachOk } from './iconos';\r\nimport { Col, Container,Row } from 'reactstrap';\r\nimport Leaflet from \"leaflet\";\r\nimport img from '../tree.png';\r\nimport Formulario from './Formulario';\r\nimport Opinion from './Opinion';\r\n\r\n\r\n// Token mapbox\r\nconst mapboxToken = 'pk.eyJ1IjoiYWxwZWxsYW1hcyIsImEiOiJja2kwazVsdm0wMWVnMnVxcWk0eWhmZGpsIn0.QMm5X6pi1TpBK6eHGACpig';\r\n\r\n// Array para colorear el fondo de cada municipio (layer)\r\nconst arrayColor = ['green', 'yellow', 'orange', 'red'];\r\n\r\nconst Mapa = () => {\r\n  // Declaramos el state de playas inicializado null\r\n  const [playasComarca, setPlayasComarca] = useState([]);\r\n  const [active, setActive] = useState(false);\r\n  const [idcomarca, setidcomarca] = useState();\r\n  const [nomCiudad, setnomCiudad] = useState();\r\n  const [nomPlaya, setplaya] = useState(null);\r\n\r\n  let DefaultIcon = Leaflet.icon({\r\n    iconUrl: img,\r\n    iconSize: [40, 40]\r\n  });\r\n\r\n  Leaflet.Marker.prototype.options.icon = DefaultIcon;\r\n\r\n  function playasFiltradas(layer) {\r\n    // Comparar cp entre comarca y playa y devuelve un array con las playas que pertenecen a la comarca\r\n    const correcto = beachOk.filter(el => el.m['-i'] === layer.feature.properties.codigo_postal);\r\n\r\n    return correcto;\r\n  }\r\n\r\n  function SetGeoJson() {\r\n    const map = useMap();\r\n    /* const geojson = L.geoJson(); */\r\n\r\n    // Estilos predefinidos para los municipios (layer)\r\n    const municipioStyle = {\r\n      weight: 1,\r\n      opacity: 0.3,\r\n      color: 'black',\r\n      dashArray: 10,\r\n      fillColor: 'blue',\r\n      fillOpacity: 0.3\r\n    }\r\n\r\n    // Función para el evento click\r\n    const onMunicipioClick = (event) => {\r\n      const layer = event.target;\r\n      //console.log(layer);\r\n      map.fitBounds(layer.getBounds());\r\n      setPlayasComarca(playasFiltradas(layer));\r\n\r\n    }\r\n\r\n    // Funcion para el evento mouseover\r\n    const onMunicipioMouseover = (event) => {\r\n      const layer = event.target;\r\n      layer.setStyle(\r\n        {\r\n          opacity: 1,\r\n        }\r\n      )\r\n      if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\r\n        layer.bringToFront();\r\n      }\r\n    }\r\n\r\n    const onMunicipioMouseout = (event) => {\r\n      const layer = event.target;\r\n      layer.setStyle(\r\n        {\r\n          opacity: 0.3,\r\n        }\r\n      )\r\n      //geojson.resetStyle(layer);\r\n    }\r\n\r\n    // Para cada uno de los municipios declaramos sus funciones (municipio es el JSON en formato array | layer es la capa del municipio que nos permitira editar su manera de actuar)\r\n    const onEachMunicipio = (municipio, layer) => {\r\n      // Recogemos el nombre del municipio y lo guardamos en la variable 'nameMunicipio'\r\n      let nameMunicipio = municipio.properties.municipio;\r\n\r\n      // Creamos un popup que mostrará el nombre del municipio en el cual clickemos\r\n      layer.bindPopup(nameMunicipio);\r\n\r\n      // Creamos una constante aleatoria para definir el color del municipio en función del array de colores\r\n      const indexColor = Math.floor(Math.random() * arrayColor.length);\r\n      layer.options.fillColor = arrayColor[indexColor];\r\n\r\n      // Eventos\r\n      layer.on({\r\n        click: onMunicipioClick,\r\n        mouseover: onMunicipioMouseover,\r\n        mouseout: onMunicipioMouseout,\r\n      });\r\n    }\r\n\r\n    return (\r\n        <GeoJSON data={geoData} style={municipioStyle} onEachFeature={onEachMunicipio} />\r\n\r\n    );\r\n  }\r\n  //Activa el formulario\r\n  const addtoform = (nomPlaya,idcomarca,nomCiudad) => {\r\n    setplaya(nomPlaya);\r\n    setidcomarca(idcomarca)\r\n    setnomCiudad(nomCiudad)\r\n\r\n    setActive(true);\r\n  };\r\n\r\n  // Muestra las playas\r\n  const playas = playasComarca.map((playa, idx) => (\r\n    <Marker key={idx} position={[playa[\"-l\"], playa[\"-o\"]]} >\r\n      <Popup>\r\n        {playa[\"-t\"]}\r\n        <i class=\"fa fa-plus\" aria-hidden=\"true\" onClick={() => addtoform(playa[\"-t\"],playa[\"-i\"],playa.m[\"-t\"])} ></i>\r\n      </Popup>\r\n    </Marker>\r\n  ));\r\n\r\n  \r\n\r\n  const selectplaya = playasComarca.map((el, idx) => (\r\n    <option key={idx} value={el[\"-t\"]}>{el[\"-t\"]}</option>\r\n  ));\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n      <Col xs={active ? \"7\" : \"12\"} >\r\n        <select className=\"custom-select\" id=\"inputGroupSelect01\">\r\n          <option value=\"\" selected>Escoge la playa ...</option>\r\n          {selectplaya}\r\n        </select>\r\n        <MapContainer style={{ height: '70vh' }} center={[41.392264, 2.202652]} zoom={10} scrollWheelZoom={true}>\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url={`https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=${mapboxToken}`}\r\n            id=\"mapbox/light-v10\"\r\n          />\r\n          {playas}\r\n          <SetGeoJson />\r\n        </MapContainer>\r\n      </Col >\r\n      <Col>\r\n        {active ? <Formulario nomplaya={nomPlaya}  idcomarca={idcomarca} nomMunicipi={nomCiudad} active={active} setActive={setActive}/> : \"\"}\r\n      </Col>\r\n      </Row>\r\n      <Opinion />\r\n    </Container>\r\n\r\n  );\r\n\r\n};\r\n\r\nexport default Mapa;\r\n","C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\components\\Navbar\\MenuItems.js",[],"C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\components\\FormularioController.jsx",[],"C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\components\\Navbar\\Contacto.jsx",[],"C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\components\\iconos.jsx",["36","37","38","39"],"C:\\Users\\Manso\\Downloads\\FRONT-MAPA\\front-mapa\\src\\datos\\geo.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":8,"nodeType":"46","messageId":"47","endLine":6,"endColumn":16},{"ruleId":"44","severity":1,"message":"48","line":7,"column":10,"nodeType":"46","messageId":"47","endLine":7,"endColumn":15},{"ruleId":"44","severity":1,"message":"49","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":15},{"ruleId":"44","severity":1,"message":"50","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":18},{"ruleId":"44","severity":1,"message":"51","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":18},{"ruleId":"44","severity":1,"message":"52","line":6,"column":8,"nodeType":"46","messageId":"47","endLine":6,"endColumn":23},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'comarcas' is defined but never used.","Identifier","unusedVar","'icono' is defined but never used.","'redflag' is defined but never used.","'yellowflag' is defined but never used.","'orangeflag' is defined but never used.","'greenyellowflag' is defined but never used.","no-global-assign","no-unsafe-negation"]